{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arulj\\\\OneDrive\\\\Documents\\\\GitHub\\\\mern-ecommerce1\\\\Frontend\\\\src\\\\core\\\\StripeCheckout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { isAutheticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/orderHelper\";\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAutheticated() && isAutheticated().token;\n  const userId = isAutheticated() && isAutheticated().user._id;\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then(response => {\n      console.log(response);\n      //call further methods\n    }).catch(error => console.log(error));\n  };\n  const showStripeButton = () => {\n    return isAutheticated() ? /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n      stripeKey: \"\",\n      token: makePayment,\n      amount: getFinalAmount() * 100,\n      name: \"Buy Tshirts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Pay with stripe\")) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Signin\"));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Stripe Checkout \", getFinalAmount()), showStripeButton());\n};\nexport default StripeCheckout;","map":{"version":3,"names":["React","useState","useEffect","isAutheticated","cartEmpty","loadCart","Link","StripeCheckoutButton","API","createOrder","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price","makePayment","body","headers","fetch","method","JSON","stringify","then","response","console","log","catch","showStripeButton","createElement","stripeKey","name","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","to"],"sources":["C:/Users/arulj/OneDrive/Documents/GitHub/mern-ecommerce1/Frontend/src/core/StripeCheckout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { isAutheticated } from \"../auth/helper\";\r\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\nimport { API } from \"../backend\";\r\nimport { createOrder } from \"./helper/orderHelper\";\r\n\r\nconst StripeCheckout = ({\r\n  products,\r\n  setReload = f => f,\r\n  reload = undefined\r\n}) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n    address: \"\"\r\n  });\r\n\r\n  const token = isAutheticated() && isAutheticated().token;\r\n  const userId = isAutheticated() && isAutheticated().user._id;\r\n\r\n  const getFinalAmount = () => {\r\n    let amount = 0;\r\n    products.map(p => {\r\n      amount = amount + p.price;\r\n    });\r\n    return amount;\r\n  };\r\n\r\n  const makePayment = token => {\r\n    const body = {\r\n      token,\r\n      products\r\n    };\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n    return fetch(`${API}/stripepayment`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        //call further methods\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  const showStripeButton = () => {\r\n    return isAutheticated() ? (\r\n      <StripeCheckoutButton\r\n        stripeKey=\"\"\r\n        token={makePayment}\r\n        amount={getFinalAmount() * 100}\r\n        name=\"Buy Tshirts\"\r\n      >\r\n        <button className=\"btn btn-success\">Pay with stripe</button>\r\n      </StripeCheckoutButton>\r\n    ) : (\r\n      <Link to=\"/signin\">\r\n        <button className=\"btn btn-warning\">Signin</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-white\">Stripe Checkout {getFinalAmount()}</h3>\r\n      {showStripeButton()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}